"use strict";
/**
 * Copyright (c) 2017-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const html_tags_1 = __importDefault(require("html-tags"));
const void_1 = __importDefault(require("html-tags/void"));
function htmlTagObjectToString(tagDefinition) {
    if (html_tags_1.default.indexOf(tagDefinition.tagName) === -1) {
        throw new Error(`Error loading ${JSON.stringify(tagDefinition)}, "${tagDefinition.tagName}" is not a valid HTML tags`);
    }
    const isVoidTag = void_1.default.indexOf(tagDefinition.tagName) !== -1;
    const attributes = Object.keys(tagDefinition.attributes || {})
        .filter(attributeName => tagDefinition.attributes[attributeName] !== false)
        .map(attributeName => {
        if (tagDefinition.attributes[attributeName] === true) {
            return attributeName;
        }
        return (attributeName + '="' + tagDefinition.attributes[attributeName] + '"');
    });
    return ('<' +
        [tagDefinition.tagName].concat(attributes).join(' ') +
        '>' +
        ((!isVoidTag && tagDefinition.innerHTML) || '') +
        (isVoidTag ? '' : '</' + tagDefinition.tagName + '>'));
}
exports.htmlTagObjectToString = htmlTagObjectToString;
