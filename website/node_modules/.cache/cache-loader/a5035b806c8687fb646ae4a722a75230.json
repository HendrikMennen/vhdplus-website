{"remainingRequest":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\babel-loader\\lib\\index.js??ref--7-1!C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--7-2!C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js??ref--7-3!C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\docs\\vhdp_procedureoperation_stepfor.md","dependencies":[{"path":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\docs\\vhdp_procedureoperation_stepfor.md","mtime":1573477628561},{"path":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\.docusaurus\\docusaurus-plugin-content-docs\\site-docs-vhdp-procedureoperation-stepfor-md-32c.json","mtime":1576669325423},{"path":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576667426517},{"path":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":1576667426482},{"path":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":1576667433976},{"path":"C:\\Users\\HendrikMennen\\source\\repos\\VHDPlus Website\\website\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js","mtime":1576667431875}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzpcXFVzZXJzXFxIZW5kcmlrTWVubmVuXFxzb3VyY2VcXHJlcG9zXFxWSERQbHVzIFdlYnNpdGVcXHdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDondmhkcF9wcm9jZWR1cmVvcGVyYXRpb25fc3RlcGZvcicsdGl0bGU6J1N0ZXBGb3InLHNpZGViYXJfbGFiZWw6J1N0ZXBGb3InfTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidEZWZpbml0aW9uJyxpZDonZGVmaW5pdGlvbicsY2hpbGRyZW46W119LHt2YWx1ZTonRXhhbXBsZXMnLGlkOidleGFtcGxlcycsY2hpbGRyZW46W119XTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6InZoZHBfcHJvY2VkdXJlb3BlcmF0aW9uX3N0ZXBmb3IiLCJ0aXRsZSI6IlN0ZXBGb3IiLCJkZXNjcmlwdGlvbiI6IiMjIERlZmluaXRpb25cciIsInNvdXJjZSI6IkBzaXRlLy4uXFxkb2NzXFx2aGRwX3Byb2NlZHVyZW9wZXJhdGlvbl9zdGVwZm9yLm1kIiwicGVybWFsaW5rIjoiL2RvY3MvdmhkcF9wcm9jZWR1cmVvcGVyYXRpb25fc3RlcGZvciIsImxhc3RVcGRhdGVkQnkiOiJBdXRob3IiLCJsYXN0VXBkYXRlZEF0IjoxNTM5NTAyMDU1LCJzaWRlYmFyX2xhYmVsIjoiU3RlcEZvciIsInNpZGViYXIiOiJkb2NzIiwicHJldmlvdXMiOnsidGl0bGUiOiJDYXNlIGFuZCBXaGVuIiwicGVybWFsaW5rIjoiL2RvY3MvdmhkcF9wcm9jZWR1cmVvcGVyYXRpb25fY2FzZSJ9LCJuZXh0Ijp7InRpdGxlIjoiV2hpbGUiLCJwZXJtYWxpbmsiOiIvZG9jcy92aGRwX3Byb2NlZHVyZW9wZXJhdGlvbl93aGlsZSJ9fTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvYyxtZXRhZGF0YX07Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMiIseyJpZCI6ImRlZmluaXRpb24ifSxgRGVmaW5pdGlvbmApLG1keCgicCIsbnVsbCxgVW5saWtlIEZvciwgdGhpcyBvcGVyYXRpb24gd29ya3MgbGlrZSBhIGZvciBsb29wIGZyb20gbGFuZ3VhZ2VzIGxpa2UgQy4KRmlyc3QgeW91IGRlY2xhcmUgYSB2YXJpYWJsZSwgdGhhbiB5b3UgaGF2ZSBhIGNvbmRpdGlvbiB0byBzdGF5IGluIHRoZSBsb29wIGFuZCB0aGFuIHlvdSBjYW4gaW5jcmVhc2Ugb3IgZGVjcmVhc2UgdGhlIHZhcmlhYmxlLmApLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlcyJ9LGBFeGFtcGxlc2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdmhkcCJ9KSxgVGhyZWFkIAp7IAogICAgU3RlcEZvciAoVkFSSUFCTEUgY291bnRlciA6IElOVEVHRVIgOj0gMDsgY291bnRlciA8IDg7IGNvdW50ZXIgOj0gY291bnRlciArIDEpIAogICAgeyAKICAgICAgICBMRUQoY291bnRlcikgPD0gJzEnOyAKICAgICAgICBXYWl0KDEwMDApOyAKICAgIH0KfQpgKSksbWR4KCJwIixudWxsLGBJbiB0aGlzIGV4YW1wbGUsIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBjb3VudGVyYCksYCBpcyBhbHdheXMgY291bnRlZCBmb3JtIDAgdG8gNy4gVGhlIGNvdW50ZXIndGggcG9zaXRpb24gb2YgdGhlIExFRCB2ZWN0b3IgaXMgc2V0IGhpZ2ggYW5kIGJldHdlZW4gdGhlIGxvb3BzLCAxMDAwIGN5Y2xlcyBhcmUgd2FpdGVkLmApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["C:/Users/HendrikMennen/source/repos/VHDPlus Website/docs/vhdp_procedureoperation_stepfor.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","rightToc","value","children","metadata","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"2IACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,iCADwB,CAE5BC,KAAK,CAAE,SAFqB,CAG5BC,aAAa,CAAE,SAHa,CAApB,CAKP,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,YADgB,CAEvBJ,EAAE,CAAE,YAFmB,CAGvBK,QAAQ,CAAE,EAHa,CAAD,CAIrB,CACDD,KAAK,CAAE,UADN,CAEDJ,EAAE,CAAE,UAFH,CAGDK,QAAQ,CAAE,EAHT,CAJqB,CAAjB,CASP,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,iCADgB,CAEtB,QAAS,SAFa,CAGtB,cAAe,iBAHO,CAItB,SAAU,oDAJY,CAKtB,YAAa,uCALS,CAMtB,gBAAiB,QANK,CAOtB,gBAAiB,UAPK,CAQtB,gBAAiB,SARK,CAStB,UAAW,MATW,CAUtB,WAAY,CACV,QAAS,eADC,CAEV,YAAa,oCAFH,CAVU,CActB,OAAQ,CACN,QAAS,OADH,CAEN,YAAa,qCAFP,CAdc,CAAjB,CAmBP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBV,QADkB,CAEpBG,QAFoB,CAApB,CAIA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,YADA,CAAR,CAEK,YAFL,CAFK,CAKL,aAAK;gIAAL,CALK,CAOL,SAAQ,CACN,KAAM,UADA,CAAR,CAEK,UAFL,CAPK,CAUL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,EAEE;;;;;;;;CAFF,CAAL,CAVK,CAqBL,aAAK,mBAAL,CAAwB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,SAA7B,CAAxB,CAA6E,sIAA7E,CArBK,CAAP,CAwBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'vhdp_procedureoperation_stepfor',\n\ttitle: 'StepFor',\n\tsidebar_label: 'StepFor'\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Definition',\n  id: 'definition',\n  children: []\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}];\nexport const metadata = {\n  \"id\": \"vhdp_procedureoperation_stepfor\",\n  \"title\": \"StepFor\",\n  \"description\": \"## Definition\\r\",\n  \"source\": \"@site/..\\\\docs\\\\vhdp_procedureoperation_stepfor.md\",\n  \"permalink\": \"/docs/vhdp_procedureoperation_stepfor\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar_label\": \"StepFor\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Case and When\",\n    \"permalink\": \"/docs/vhdp_procedureoperation_case\"\n  },\n  \"next\": {\n    \"title\": \"While\",\n    \"permalink\": \"/docs/vhdp_procedureoperation_while\"\n  }\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc,\nmetadata\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"definition\"\n    }}>{`Definition`}</h2>\n    <p>{`Unlike For, this operation works like a for loop from languages like C.\nFirst you declare a variable, than you have a condition to stay in the loop and than you can increase or decrease the variable.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-vhdp\"\n      }}>{`Thread \n{ \n    StepFor (VARIABLE counter : INTEGER := 0; counter < 8; counter := counter + 1) \n    { \n        LED(counter) <= '1'; \n        Wait(1000); \n    }\n}\n`}</code></pre>\n    <p>{`In this example, `}<inlineCode parentName=\"p\">{`counter`}</inlineCode>{` is always counted form 0 to 7. The counter'th position of the LED vector is set high and between the loops, 1000 cycles are waited.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}